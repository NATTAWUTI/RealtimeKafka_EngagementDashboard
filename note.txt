curl -X POST "http://localhost:9000/tables" -H "Content-Type: application/json" --data-binary @AggTable_REALTIME.json


curl -X POST "http://localhost:9000/tables" -H "Content-Type: application/json" --data-binary @AggTable_REALTIME_T6.json

curl -X POST "https://13.212.221.231:9000/tables" -H "Content-Type: application/json" --data-binary @AggTable_REALTIME_T6.json




kafka-console-consumer.sh --bootstrap-server kafka:9092 --topic users_engagement_clean_T4 --from-beginning



docker exec -it broker1 /bin/bash

docker run --rm --network nx broker1 kafka-console-consumer.sh --bootstrap-server broker1:9092 --topic users_engagement_clean_T4 --from-beginning


========================================
--AWS
Nattawut23_test

curl -X POST "http://13.212.221.231:9000/tables" -H "Content-Type: application/json" --data-binary @users_pinot.json

--IP kafka
http://54.179.19.243:9021/

--pinot
http://54.179.19.243:9000/#/

--pot
22
8081
8099
3021
8501
9000

---key
nattawut23_test3

--step1 : script insert flie compose and Public IPv4 DNS. (Run cmd Addmin)

--put file docker-compose
scp -i "C:/Keys/nattawut23.pem" "D:/Work/Master degree/Document/Term4-2024/3.RealTime/HW/HW_3/docker-compose.yml" ec2-54-179-19-243.ap-southeast-1.compute.amazonaws.com:/home/ubuntu

scp -i "C:/Keys/nattawut23.pem" "D:/Work/Master degree/Document/Term4-2024/3.RealTime/HW/HW_3/docker-compose-V2.yml" ubuntu@ec2-54-179-19-243.ap-southeast-1.compute.amazonaws.com:/home/ubuntu

scp -i "C:/Keys/nattawut23.pem" "D:/Work/Master degree/Document/Term4-2024/3.RealTime/HW/HW_3/producer_Json.py" ubuntu@ec2-54-179-19-243.ap-southeast-1.compute.amazonaws.com:/home/ubuntu

--put file producer_json
scp -i "C:/Keys/nattawut23.pem" "D:/Work/Master degree/Document/Term4-2024/3.RealTime/HW/HW_3/users_pinot.json" ubuntu@ec2-54-179-19-243.ap-southeast-1.compute.amazonaws.com:/home/ubuntu


--step 2 : 
ssh -i "C:/Keys/nattawut23.pem" ubuntu@ec2-54-179-19-243.ap-southeast-1.compute.amazonaws.com

--step 3 :
link : https://docs.docker.com/engine/install/ubuntu/      ---> "Set up Docker's apt repository" copy code 1,2,3 run
1.# Add Docker's official GPG key:
sudo apt-get update
sudo apt-get install ca-certificates curl
sudo install -m 0755 -d /etc/apt/keyrings
sudo curl -fsSL https://download.docker.com/linux/ubuntu/gpg -o /etc/apt/keyrings/docker.asc
sudo chmod a+r /etc/apt/keyrings/docker.asc
2.
sudo apt-get install docker-ce docker-ce-cli containerd.io docker-buildx-plugin docker-compose-plugin
3.
sudo docker run hello-world


(option : Not install docker)
1.
sudo mkdir -p /etc/apt/keyrings
curl -fsSL https://download.docker.com/linux/ubuntu/gpg | sudo gpg --dearmor -o /etc/apt/keyrings/docker.gpg
2.
echo \
  "deb [arch=$(dpkg --print-architecture) signed-by=/etc/apt/keyrings/docker.gpg] https://download.docker.com/linux/ubuntu \
  $(lsb_release -cs) stable" | sudo tee /etc/apt/sources.list.d/docker.list > /dev/null
3.
sudo apt-get update
4.
sudo sh get-docker.sh
5.
sudo apt-get install -y docker-ce docker-ce-cli containerd.io docker-buildx-plugin docker-compose-plugin





--step 4 :
cmd --> "sudo docker-compose up -d"  or "sudo docker-compose -f docker-compose-V2.yml up -d"
"sudo docker ps"
"sudo docker ps -a"
sudo docker-compose -f docker-compose-V2.yml restart

(option) docker Not ubuntu : 
1.
sudo curl -L "https://github.com/docker/compose/releases/download/$(curl -s https://api.github.com/repos/docker/compose/releases/latest | grep tag_name | cut -d '"' -f 4)/docker-compose-$(uname -s)-$(uname -m)" -o /usr/local/bin/docker-compose
2.
sudo chmod +x /usr/local/bin/docker-compose
3.
docker-compose --version

----------
sudo apt update
sudo apt install -y python3



--step 5 (run file python):

sudo apt update
sudo apt install -y python3
sudo apt install -y python3-pip
sudo apt install python3-venv
sudo python3 -m venv /home/ubuntu/myenv
sudo chown -R $USER:$USER myenv
source myenv/bin/activate
pip install confluent_kafka
pip install pandas
pip install Faker
 
## edit code
-sudo nano /etc/hosts
127.0.0.1 broker broker1 broker2
-exit : ctrl+o --> enter --> ctrl+x 

source myenv/bin/activate
 
python3 producer_Json.py

=====================================================================
---docker
> sudo curl -L "https://github.com/docker/compose/releases/download/v2.12.2/docker-compose-$ (uname -s) -$ (uname -m) " -0 /usr/local
> sudo chmod +x /usr/local/bin/docker-compose
sudo in -s /usr/local/bin/docker-compose /usr/bin/docker-compose
> docker-compose --version
> sudo docker-compose up -d


curl -X POST http://ec2-47-128-152-76.ap-southeast-1.compute.amazonaws.com: 8099/query/sql -H "Content-Type: application/json" -d

=======================================================================
--clear disk
1. Identify Large Files and Directories
sudo du -ah / | sort -rh | head -n 20

2.Clear Package Cache
sudo apt-get clean

3.sudo apt-get autoremove
sudo apt-get autoremove

4.Clean Up Docker Storage (if using Docker)
docker image prune -a
docker container prune
docker volume prune
docker network prune

5. Clear System Logs
sudo journalctl --vacuum-size=100M

6. Delete Temporary Files
sudo rm -rf /tmp/*

7. Check for Old Snap Packages (if using Snap)
- sudo du -sh /var/lib/snapd/snaps
- sudo snap list --all | awk '/disabled/{print $1, $3}' | \
while read snapname revision; do sudo snap remove "$snapname" --revision="$revision"; done

8. Recheck Disk Usage
df -h


=======================================================================
broker1:29092,broker2:29093,broker3:29094

broker:29092,broker1:29095,broker2:29098



users_table 
{
  "USERID": "User_6",
  "REGISTERTIME": 1511043499473,
  "REGIONID": "Region_7",
  "GENDER": "OTHER"
}



ACTION_TUMLING_T6

{
  "VIEWTIME": 3832551,
  "WINDOWSTART": 1731582600000,
  "WINDOWEND": 1731583200000,
  "LANDING_DT": "2022-08-13",
  "DEVICE": "android",
  "COUNTRY": "Turkey",
  "PAGE": "Page_84",
  "ACTION": "like",
  "LEVEL": "Gold",
  "CHANNEL": "Twitter",
  "SESSION": 2,
  "WINDOW_START_TS": "2024-11-14 11:10:00",
  "WINDOW_END_TS": "2024-11-14 11:20:00"
}


DEVICE_HOPPING_T7
{
  "ACTION": "share",
  "WINDOWSTART": 1731503400000,
  "WINDOWEND": 1731504000000,
  "DEVICE": "android",
  "COUNTRY": "South Georgia and the South Sandwich Islands",
  "SESSION": 29139,
  "WINDOW_START_TS": "2024-11-13 13:10:00",
  "WINDOW_END_TS": "2024-11-13 13:20:00",
  "WINDOW_LENGTH_MS": 600000
}


COUNTRY_WINDOW_T8
{
  "ACTION": "view",
  "WINDOWSTART": 1731503706718,
  "WINDOWEND": 1731503706718,
  "COUNTRY": "Tanzania",
  "LEVEL": "Silver",
  "SESSION": 39409,
  "WINDOW_START_TS": "2024-11-13 13:15:06",
  "WINDOW_END_TS": "2024-11-13 13:15:06",
  "WINDOW_LENGTH_MS": 0
}




users_engagement_joinAgg_T5


{
  "USER": "User_9",
  "PAGE": "Page_78",
  "LANDING_DT": "2023-06-27",
  "CHANNEL": "Pinterest",
  "COUNTRY": "Tanzania",
  "DEVICE": "android",
  "ACTION": "view",
  "LEVEL": "Silver",
  "GENDER": "MALE",
  "VIEWTIME": 378011
}



sudo systemctl restart pinot-controller
sudo systemctl restart pinot-broker
sudo systemctl restart pinot-server
=================================


---docker restart

docker-compose restart

====================
-- SELECT
--     DEVICE,
--     ACTION,
--     COUNT( ACTION) AS SESSION
-- FROM
--     ACTION_TUMLING_T6
-- WHERE
--     LEVEL IN ('Gold', 'Silver', 'Platinum')  
--     AND PAGE IN ('Page_7')                   
-- GROUP BY DEVICE, ACTION;


